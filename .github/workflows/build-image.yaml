name: "Build and Push Image for Squid Ingestor"
on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Image tag after the build"
        required: false
        type: string
      environment:
        description: "Target Environment"
        required: true
        type: choice
        options:
          - porcini
          - mainnet
  workflow_call:
    inputs:
      image_tag:
        required: false
        type: string
      environment:
        required: false
        type: string
        default: "porcini"
    outputs:
      image_full_name:
        description: "Full name of the built image including tag"
        value: ${{ jobs.build.outputs.image_full_name }}
      image_tag:
        description: "Image tag"
        value: ${{ jobs.build.outputs.image_tag }}

env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: "futureversecom/subsquid-ingestor"
  DOCKER_FILE: "./Dockerfile"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      packages: write
      pull-requests: read
    outputs:
      image_full_name: ${{ steps.meta.outputs.tags }}
      image_tag: ${{ steps.extract-tag.outputs.tag }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=${{ inputs.environment }}-,format=short
            type=ref,event=tag,prefix=${{ inputs.environment }}-
            type=raw,value=${{ inputs.environment }}-${{ inputs.image_tag }},enable=${{ inputs.image_tag != '' }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ env.DOCKER_FILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Extract tag
        id: extract-tag
        run: |
          FULL_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
          TAG=${FULL_TAG#${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
